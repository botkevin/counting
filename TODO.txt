1. Get selective search working with feature detection
    - first should get main program working without selective search, but i think we should do this anyways
    - selective search feed into program
    - selective search display
    - implement basic scoring method
    - Non Maximum Suppression (NMS)
    - box reduction. Reduce the box so that its the perfect size for the matches
    - fancy scoring method
    - deal with 0 keypoints. queryDescriptors.type() == trainDescCollection[0].type() error

2. Multi image
    - find a good way to plot geometric/spatial connections for SVM

<> : means tried

Welp basic cutoff is terrible. Ratio test cannot correctly tell if the object exists or not.
    - doesnt even find the correct thing, too little matches
        - <> try to compare not using selective search with selective search matches 
        - try matching screen to screen (same picture)
    - <> have to try with the new images 
    - try with negative examples (non matches)
    - <> display knnmatches to see if we can identify a problem 
    - it may be due to a bunch a features matching to a small square in the search patch
        - in this case it may be better to reject matches that match to the same area
    - a bunch of features are matching to the same area. It seems lowe's ratio is not good enough
        - <> gonna try lower ratios
            - lowering ratio doesnt really work. The same problem exists and real objects are not identified well
        - implement something that will take the dstance of points to see how clustered they are
        - <> gonna try using bfmatcher instead of knnmatcher
            - doesnt really produce noticably different results
        - try crosscheckmatching: https://stackoverflow.com/questions/11181823/why-we-need-crosscheckmatching-for-feature | https://docs.opencv.org/master/dc/dc3/tutorial_py_matcher.html
    - maybe try homography matrices and the "sureness" of homography matrix to see if its an object
    - try other feature detection algos
        - sift seems to perform much better than surf
    - <> for the screen try using only the car. i think the straight edge features are getting confused

Crosscheck might work better with the skeleton structure. Maybe try both.
    - need to figure out display homography
    - crosscheck works beautifully, but flann crosscheck does not currently work
        - might just skip ahead on that flann crosscheck
    - use homography to reduce matchboxes
        - NMS with homography? Maybe just extend homography matrix to rectangle from parallelogram

Currently is poor with group up objects
    - due to selective search finding a rectangle with multiple objects in it
    - might be solved with a simple 45 degree rotation and rerun.

need to add functionality to nms to return the number of overlaps. only return a square if there are multiple overlaps,
    - otherwise we end up with things just so happening to look the same

finish tuning for parallelogram + mask basic scoring.